// Generated by view binder compiler. Do not edit!
package com.example.wscube1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wscube1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CourceBottomSheetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout CourceBottomSheet;

  @NonNull
  public final TextView CourceDescripton;

  @NonNull
  public final ImageView CourceImage;

  @NonNull
  public final TextView CourceName;

  @NonNull
  public final TextView CourcePrice;

  @NonNull
  public final TextView CourceSutedFor;

  @NonNull
  public final Button EditCource;

  @NonNull
  public final Button ViewDetail;

  private CourceBottomSheetBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout CourceBottomSheet, @NonNull TextView CourceDescripton,
      @NonNull ImageView CourceImage, @NonNull TextView CourceName, @NonNull TextView CourcePrice,
      @NonNull TextView CourceSutedFor, @NonNull Button EditCource, @NonNull Button ViewDetail) {
    this.rootView = rootView;
    this.CourceBottomSheet = CourceBottomSheet;
    this.CourceDescripton = CourceDescripton;
    this.CourceImage = CourceImage;
    this.CourceName = CourceName;
    this.CourcePrice = CourcePrice;
    this.CourceSutedFor = CourceSutedFor;
    this.EditCource = EditCource;
    this.ViewDetail = ViewDetail;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CourceBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CourceBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cource_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CourceBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout CourceBottomSheet = (RelativeLayout) rootView;

      id = R.id.CourceDescripton;
      TextView CourceDescripton = ViewBindings.findChildViewById(rootView, id);
      if (CourceDescripton == null) {
        break missingId;
      }

      id = R.id.CourceImage;
      ImageView CourceImage = ViewBindings.findChildViewById(rootView, id);
      if (CourceImage == null) {
        break missingId;
      }

      id = R.id.CourceName;
      TextView CourceName = ViewBindings.findChildViewById(rootView, id);
      if (CourceName == null) {
        break missingId;
      }

      id = R.id.CourcePrice;
      TextView CourcePrice = ViewBindings.findChildViewById(rootView, id);
      if (CourcePrice == null) {
        break missingId;
      }

      id = R.id.CourceSutedFor;
      TextView CourceSutedFor = ViewBindings.findChildViewById(rootView, id);
      if (CourceSutedFor == null) {
        break missingId;
      }

      id = R.id.EditCource;
      Button EditCource = ViewBindings.findChildViewById(rootView, id);
      if (EditCource == null) {
        break missingId;
      }

      id = R.id.ViewDetail;
      Button ViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (ViewDetail == null) {
        break missingId;
      }

      return new CourceBottomSheetBinding((RelativeLayout) rootView, CourceBottomSheet,
          CourceDescripton, CourceImage, CourceName, CourcePrice, CourceSutedFor, EditCource,
          ViewDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
