// Generated by view binder compiler. Do not edit!
package com.example.wscube1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wscube1.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditCourceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText courceDescri;

  @NonNull
  public final TextInputEditText courceImgLink;

  @NonNull
  public final TextInputEditText courceLink;

  @NonNull
  public final TextInputEditText courceName;

  @NonNull
  public final TextInputEditText courcePrice;

  @NonNull
  public final TextInputEditText courceSutedFor;

  @NonNull
  public final Button deleteCource;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Button updateCource;

  @NonNull
  public final ProgressBar updateCourceProgressBar;

  private ActivityEditCourceBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText courceDescri, @NonNull TextInputEditText courceImgLink,
      @NonNull TextInputEditText courceLink, @NonNull TextInputEditText courceName,
      @NonNull TextInputEditText courcePrice, @NonNull TextInputEditText courceSutedFor,
      @NonNull Button deleteCource, @NonNull ConstraintLayout main, @NonNull Button updateCource,
      @NonNull ProgressBar updateCourceProgressBar) {
    this.rootView = rootView;
    this.courceDescri = courceDescri;
    this.courceImgLink = courceImgLink;
    this.courceLink = courceLink;
    this.courceName = courceName;
    this.courcePrice = courcePrice;
    this.courceSutedFor = courceSutedFor;
    this.deleteCource = deleteCource;
    this.main = main;
    this.updateCource = updateCource;
    this.updateCourceProgressBar = updateCourceProgressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditCourceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditCourceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_cource, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditCourceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.courceDescri;
      TextInputEditText courceDescri = ViewBindings.findChildViewById(rootView, id);
      if (courceDescri == null) {
        break missingId;
      }

      id = R.id.courceImgLink;
      TextInputEditText courceImgLink = ViewBindings.findChildViewById(rootView, id);
      if (courceImgLink == null) {
        break missingId;
      }

      id = R.id.courceLink;
      TextInputEditText courceLink = ViewBindings.findChildViewById(rootView, id);
      if (courceLink == null) {
        break missingId;
      }

      id = R.id.courceName;
      TextInputEditText courceName = ViewBindings.findChildViewById(rootView, id);
      if (courceName == null) {
        break missingId;
      }

      id = R.id.courcePrice;
      TextInputEditText courcePrice = ViewBindings.findChildViewById(rootView, id);
      if (courcePrice == null) {
        break missingId;
      }

      id = R.id.courceSutedFor;
      TextInputEditText courceSutedFor = ViewBindings.findChildViewById(rootView, id);
      if (courceSutedFor == null) {
        break missingId;
      }

      id = R.id.deleteCource;
      Button deleteCource = ViewBindings.findChildViewById(rootView, id);
      if (deleteCource == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.updateCource;
      Button updateCource = ViewBindings.findChildViewById(rootView, id);
      if (updateCource == null) {
        break missingId;
      }

      id = R.id.updateCourceProgressBar;
      ProgressBar updateCourceProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (updateCourceProgressBar == null) {
        break missingId;
      }

      return new ActivityEditCourceBinding((ConstraintLayout) rootView, courceDescri, courceImgLink,
          courceLink, courceName, courcePrice, courceSutedFor, deleteCource, main, updateCource,
          updateCourceProgressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
