// Generated by view binder compiler. Do not edit!
package com.example.wscube1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wscube1.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardForContactviewBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardForContactList;

  @NonNull
  public final ImageView contactDelete;

  @NonNull
  public final ImageView contactEdit;

  @NonNull
  public final ImageView contactImg;

  @NonNull
  public final TextView contactName;

  @NonNull
  public final TextView contactNumber;

  private CardForContactviewBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardForContactList, @NonNull ImageView contactDelete,
      @NonNull ImageView contactEdit, @NonNull ImageView contactImg, @NonNull TextView contactName,
      @NonNull TextView contactNumber) {
    this.rootView = rootView;
    this.cardForContactList = cardForContactList;
    this.contactDelete = contactDelete;
    this.contactEdit = contactEdit;
    this.contactImg = contactImg;
    this.contactName = contactName;
    this.contactNumber = contactNumber;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardForContactviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardForContactviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_for_contactview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardForContactviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardForContactList = (MaterialCardView) rootView;

      id = R.id.contactDelete;
      ImageView contactDelete = ViewBindings.findChildViewById(rootView, id);
      if (contactDelete == null) {
        break missingId;
      }

      id = R.id.contactEdit;
      ImageView contactEdit = ViewBindings.findChildViewById(rootView, id);
      if (contactEdit == null) {
        break missingId;
      }

      id = R.id.contactImg;
      ImageView contactImg = ViewBindings.findChildViewById(rootView, id);
      if (contactImg == null) {
        break missingId;
      }

      id = R.id.contactName;
      TextView contactName = ViewBindings.findChildViewById(rootView, id);
      if (contactName == null) {
        break missingId;
      }

      id = R.id.contactNumber;
      TextView contactNumber = ViewBindings.findChildViewById(rootView, id);
      if (contactNumber == null) {
        break missingId;
      }

      return new CardForContactviewBinding((MaterialCardView) rootView, cardForContactList,
          contactDelete, contactEdit, contactImg, contactName, contactNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
