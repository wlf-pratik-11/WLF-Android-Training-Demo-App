// Generated by view binder compiler. Do not edit!
package com.example.wscube1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wscube1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMultiLanguageDemoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button idBtnEnglish;

  @NonNull
  public final Button idBtnGujrati;

  @NonNull
  public final Button idBtnHindi;

  @NonNull
  public final TextView idTVCurrentLanguage;

  @NonNull
  public final TextView idTVHeading;

  @NonNull
  public final TextView idTVSubHeading;

  @NonNull
  public final LinearLayout linearLayout;

  private ActivityMultiLanguageDemoBinding(@NonNull RelativeLayout rootView,
      @NonNull Button idBtnEnglish, @NonNull Button idBtnGujrati, @NonNull Button idBtnHindi,
      @NonNull TextView idTVCurrentLanguage, @NonNull TextView idTVHeading,
      @NonNull TextView idTVSubHeading, @NonNull LinearLayout linearLayout) {
    this.rootView = rootView;
    this.idBtnEnglish = idBtnEnglish;
    this.idBtnGujrati = idBtnGujrati;
    this.idBtnHindi = idBtnHindi;
    this.idTVCurrentLanguage = idTVCurrentLanguage;
    this.idTVHeading = idTVHeading;
    this.idTVSubHeading = idTVSubHeading;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMultiLanguageDemoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMultiLanguageDemoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_multi_language_demo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMultiLanguageDemoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.idBtnEnglish;
      Button idBtnEnglish = ViewBindings.findChildViewById(rootView, id);
      if (idBtnEnglish == null) {
        break missingId;
      }

      id = R.id.idBtnGujrati;
      Button idBtnGujrati = ViewBindings.findChildViewById(rootView, id);
      if (idBtnGujrati == null) {
        break missingId;
      }

      id = R.id.idBtnHindi;
      Button idBtnHindi = ViewBindings.findChildViewById(rootView, id);
      if (idBtnHindi == null) {
        break missingId;
      }

      id = R.id.idTVCurrentLanguage;
      TextView idTVCurrentLanguage = ViewBindings.findChildViewById(rootView, id);
      if (idTVCurrentLanguage == null) {
        break missingId;
      }

      id = R.id.idTVHeading;
      TextView idTVHeading = ViewBindings.findChildViewById(rootView, id);
      if (idTVHeading == null) {
        break missingId;
      }

      id = R.id.idTVSubHeading;
      TextView idTVSubHeading = ViewBindings.findChildViewById(rootView, id);
      if (idTVSubHeading == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      return new ActivityMultiLanguageDemoBinding((RelativeLayout) rootView, idBtnEnglish,
          idBtnGujrati, idBtnHindi, idTVCurrentLanguage, idTVHeading, idTVSubHeading, linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
